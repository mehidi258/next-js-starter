{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mehedihasan/Sites/next-js-starter/src/components/brandsArchive/MultiRangeSlider/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './index.module.scss';\n\nvar MultiRangeSlider = function MultiRangeSlider(_ref) {\n  _s();\n\n  var min = _ref.min,\n      max = _ref.max;\n\n  var _useState = useState(min),\n      minVal = _useState[0],\n      setMinVal = _useState[1];\n\n  var _useState2 = useState(max),\n      maxVal = _useState2[0],\n      setMaxVal = _useState2[1];\n\n  var minValRef = useRef(min);\n  var maxValRef = useRef(max);\n  var range = useRef(null); // Convert to percentage\n\n  var getPercent = useCallback(function (value) {\n    return Math.round((value - min) / (max - min) * 100);\n  }, [min, max]); // Set width of the range to decrease from the left side\n\n  useEffect(function () {\n    var minPercent = getPercent(minVal);\n    var maxPercent = getPercent(maxValRef.current);\n\n    if (range.current) {\n      range.current.style.left = \"\".concat(minPercent, \"%\");\n      range.current.style.width = \"\".concat(maxPercent - minPercent, \"%\");\n    }\n  }, [minVal, getPercent]); // Set width of the range to decrease from the right side\n\n  useEffect(function () {\n    var minPercent = getPercent(minValRef.current);\n    var maxPercent = getPercent(maxVal);\n\n    if (range.current) {\n      range.current.style.width = \"\".concat(maxPercent - minPercent, \"%\");\n    }\n  }, [maxVal, getPercent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.multi__range__slider__container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: minVal,\n      onChange: function onChange(event) {\n        var value = Math.min(Number(event.target.value), maxVal - 1);\n        setMinVal(value);\n        minValRef.current = value;\n      },\n      className: \"\".concat(styles.thumb, \" \").concat(styles.thumb__left),\n      style: {\n        zIndex: minVal > max - 100 && '5'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: maxVal,\n      onChange: function onChange(event) {\n        var value = Math.max(Number(event.target.value), minVal + 1);\n        setMaxVal(value);\n        maxValRef.current = value;\n      },\n      className: \"\".concat(styles.thumb, \" \").concat(styles.thumb__right)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.slider,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.slider__track\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: range,\n        className: styles.slider__range\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.slider__left__value,\n        children: [\"$\", minVal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.slider__right__value,\n        children: [\"$\", maxVal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MultiRangeSlider, \"To0AX+fow2coG+aI6vGuXqDeI8s=\");\n\n_c = MultiRangeSlider;\nMultiRangeSlider.propTypes = {\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired\n};\nexport default MultiRangeSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiRangeSlider\");","map":{"version":3,"sources":["/Users/mehedihasan/Sites/next-js-starter/src/components/brandsArchive/MultiRangeSlider/index.js"],"names":["React","useCallback","useEffect","useState","useRef","PropTypes","styles","MultiRangeSlider","min","max","minVal","setMinVal","maxVal","setMaxVal","minValRef","maxValRef","range","getPercent","value","Math","round","minPercent","maxPercent","current","style","left","width","multi__range__slider__container","event","Number","target","thumb","thumb__left","zIndex","thumb__right","slider","slider__track","slider__range","slider__left__value","slider__right__value","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './index.module.scss';\n\nconst MultiRangeSlider = ({ min, max }) => {\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(min);\n  const maxValRef = useRef(max);\n  const range = useRef(null);\n\n  // Convert to percentage\n  const getPercent = useCallback(\n    (value) => Math.round(((value - min) / (max - min)) * 100),\n    [min, max]\n  );\n\n  // Set width of the range to decrease from the left side\n  useEffect(() => {\n    const minPercent = getPercent(minVal);\n    const maxPercent = getPercent(maxValRef.current);\n\n    if (range.current) {\n      range.current.style.left = `${minPercent}%`;\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [minVal, getPercent]);\n\n  // Set width of the range to decrease from the right side\n  useEffect(() => {\n    const minPercent = getPercent(minValRef.current);\n    const maxPercent = getPercent(maxVal);\n\n    if (range.current) {\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [maxVal, getPercent]);\n\n  return (\n    <div className={styles.multi__range__slider__container}>\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={minVal}\n        onChange={(event) => {\n          const value = Math.min(Number(event.target.value), maxVal - 1);\n          setMinVal(value);\n          minValRef.current = value;\n        }}\n        className={`${styles.thumb} ${styles.thumb__left}`}\n        style={{ zIndex: minVal > max - 100 && '5' }}\n      />\n\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={maxVal}\n        onChange={(event) => {\n          const value = Math.max(Number(event.target.value), minVal + 1);\n          setMaxVal(value);\n          maxValRef.current = value;\n        }}\n        className={`${styles.thumb} ${styles.thumb__right}`}\n      />\n\n      <div className={styles.slider}>\n        <div className={styles.slider__track} />\n        <div ref={range} className={styles.slider__range} />\n        <div className={styles.slider__left__value}>${minVal}</div>\n        <div className={styles.slider__right__value}>${maxVal}</div>\n      </div>\n    </div>\n  );\n};\n\nMultiRangeSlider.propTypes = {\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired\n};\n\nexport default MultiRangeSlider;\n"]},"metadata":{},"sourceType":"module"}