{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mehedihasan/Sites/next-js-starter/src/components/common/image/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Img from 'next/image';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { DEFAULT_POST_IMG_URL, DEFAULT_AUTHOR_IMG_URL } from '../../utils/constants/urls';\n/**\n * Image Component.\n * We don't need to add srcSet, as Next js will generate that.\n * @see https://nextjs.org/docs/api-reference/next/image#other-props\n * @see https://nextjs.org/docs/basic-features/image-optimization#device-sizes\n *\n * @param {Object} props Component props.\n *\n * @return {jsx}\n */\n\nconst Image = props => {\n  const {\n    altText,\n    title,\n    width,\n    height,\n    sourceUrl,\n    className,\n    layout,\n    objectFit,\n    containerClassNames,\n    showDefault,\n    isDefaultProfileImg,\n    setLoading\n  } = props,\n        rest = _objectWithoutProperties(props, [\"altText\", \"title\", \"width\", \"height\", \"sourceUrl\", \"className\", \"layout\", \"objectFit\", \"containerClassNames\", \"showDefault\", \"isDefaultProfileImg\", \"setLoading\"]);\n\n  if (!sourceUrl && !showDefault) {\n    return null;\n  }\n\n  let DEFAULT_IMG_URL = DEFAULT_POST_IMG_URL;\n\n  if (isDefaultProfileImg) {\n    DEFAULT_IMG_URL = DEFAULT_AUTHOR_IMG_URL;\n  }\n  /**\n   * If we use layout = fill then, width and height of the image cannot be used.\n   * and the image fills on the entire width and the height of its parent container.\n   * That's we need to wrap our image in a container and give it a height and width.\n   * Notice that in this case, the given height and width is being used for container and not img.\n   */\n\n\n  if ('fill' === layout) {\n    const attributes = _objectSpread({\n      alt: altText || title,\n      src: sourceUrl || (showDefault ? DEFAULT_IMG_URL : ''),\n      layout: 'fill',\n      className: cx('object-cover', className)\n    }, rest);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('relative', containerClassNames),\n      children: /*#__PURE__*/_jsxDEV(Img, _objectSpread({}, attributes), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  } else {\n    const attributes = _objectSpread({\n      alt: altText || title,\n      src: sourceUrl || (showDefault ? DEFAULT_IMG_URL : ''),\n      width: width || 'auto',\n      height: height || 'auto',\n      className\n    }, rest);\n\n    setLoading && setTimeout(function () {\n      setLoading(false);\n    }, 200);\n    return /*#__PURE__*/_jsxDEV(Img, _objectSpread({}, attributes), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n};\n\nImage.propTypes = {\n  altText: PropTypes.string,\n  title: PropTypes.string,\n  sourceUrl: PropTypes.string,\n  objectfit: PropTypes.string,\n  layout: PropTypes.string,\n  showDefault: PropTypes.bool,\n  containerClassName: PropTypes.string,\n  className: PropTypes.string\n};\nImage.defaultProps = {\n  altText: '',\n  title: '',\n  sourceUrl: '',\n  showDefault: true,\n  containerClassNames: '',\n  className: 'post__image'\n};\nexport default Image;","map":{"version":3,"sources":["/Users/mehedihasan/Sites/next-js-starter/src/components/common/image/index.js"],"names":["Img","PropTypes","cx","DEFAULT_POST_IMG_URL","DEFAULT_AUTHOR_IMG_URL","Image","props","altText","title","width","height","sourceUrl","className","layout","objectFit","containerClassNames","showDefault","isDefaultProfileImg","setLoading","rest","DEFAULT_IMG_URL","attributes","alt","src","setTimeout","propTypes","string","objectfit","bool","containerClassName","defaultProps"],"mappings":"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","sourcesContent":["import Img from 'next/image';\n\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { DEFAULT_POST_IMG_URL, DEFAULT_AUTHOR_IMG_URL } from '../../utils/constants/urls';\n\n/**\n * Image Component.\n * We don't need to add srcSet, as Next js will generate that.\n * @see https://nextjs.org/docs/api-reference/next/image#other-props\n * @see https://nextjs.org/docs/basic-features/image-optimization#device-sizes\n *\n * @param {Object} props Component props.\n *\n * @return {jsx}\n */\nconst Image = props => {\n  const {\n    altText,\n    title,\n    width,\n    height,\n    sourceUrl,\n    className,\n    layout,\n    objectFit,\n    containerClassNames,\n    showDefault,\n    isDefaultProfileImg,\n    setLoading,\n    ...rest\n  } = props;\n\n  if (!sourceUrl && !showDefault) {\n    return null;\n  }\n\n  let DEFAULT_IMG_URL = DEFAULT_POST_IMG_URL;\n\n  if (isDefaultProfileImg) {\n    DEFAULT_IMG_URL = DEFAULT_AUTHOR_IMG_URL;\n  }\n\n  /**\n   * If we use layout = fill then, width and height of the image cannot be used.\n   * and the image fills on the entire width and the height of its parent container.\n   * That's we need to wrap our image in a container and give it a height and width.\n   * Notice that in this case, the given height and width is being used for container and not img.\n   */\n  if ('fill' === layout) {\n    const attributes = {\n      alt: altText || title,\n      src: sourceUrl || (showDefault ? DEFAULT_IMG_URL : ''),\n      layout: 'fill',\n      className: cx('object-cover', className),\n      ...rest\n    };\n\n    return (\n      <div className={cx('relative', containerClassNames)}>\n        <Img {...attributes} />\n      </div>\n    );\n  } else {\n    const attributes = {\n      alt: altText || title,\n      src: sourceUrl || (showDefault ? DEFAULT_IMG_URL : ''),\n      width: width || 'auto',\n      height: height || 'auto',\n      className,\n      ...rest\n    };\n    setLoading &&\n      setTimeout(function() {\n        setLoading(false);\n      }, 200);\n    return <Img {...attributes} />;\n  }\n};\n\nImage.propTypes = {\n  altText: PropTypes.string,\n  title: PropTypes.string,\n  sourceUrl: PropTypes.string,\n  objectfit: PropTypes.string,\n  layout: PropTypes.string,\n  showDefault: PropTypes.bool,\n  containerClassName: PropTypes.string,\n  className: PropTypes.string\n};\n\nImage.defaultProps = {\n  altText: '',\n  title: '',\n  sourceUrl: '',\n  showDefault: true,\n  containerClassNames: '',\n  className: 'post__image'\n};\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}